# Trigger pipeline from branches
trigger:
  branches:
    include:
    - develop
    - main

# Trigger pipeline from PRs. Currently, has to be configured in Azure DevOps settings for it to fully work
pr:
  autoCancel: true
  branches:
    include:
      - develop
      - main

# Environment to use
pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: nodeVersion
    value: '18.x'
  # Docker filename
  - name: dockerFile
    value: Dockerfile
  - name: isPullRequest
    value: $[ eq(variables['Build.Reason'], 'PullRequest') ]
  - name: isDev
    value: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['System.PullRequest.TargetBranch'], 'develop'))]
  - name: isProd
    value: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['System.PullRequest.TargetBranch'], 'main'))]
  # Container registry tag
  - ${{ if eq(variables.isDev, true) }}:
    - name: tag
      value: dev-$(Build.BuildNumber)
  - ${{ if eq(variables.isProd, true) }}:
    - name: tag
      value: prod-$(Build.BuildNumber)
  # Set the library group variable. The group is defined in Azure DevOps.
  - ${{ if eq(variables.isDev, true) }}:
      - group: bid-admin-api-demo-dev
  - ${{ if eq(variables.isProd, true) }}:
      - group: bid-admin-api-demo-prod

stages:
# Build Stage for Dev
- stage: BuildStage
  displayName: 'Build'
  jobs:
  - job: BuildJob
    steps:
      # Extract the repo name without the github org or account name
      - script: |
          repo_name=$(echo $(Build.Repository.Name) | rev | cut -d'/' -f 1 | rev)
          echo "##vso[task.setvariable variable=repoNameAsImageName]$repo_name"
        displayName: 'Parse repo name'
      - template: common-build-steps.yml
# Deployment Stage for Dev
- stage: DeployStage
  displayName: 'Deploy'
  condition: and(succeeded(), ne(variables.isPullRequest, true))
  dependsOn: BuildStage
  jobs:
  - job: DeployJob
    steps:
    - template: common-deploy-steps.yml
